---
:be:
  :cardinal:
    :rule: 'lambda { |num, runtime| n = runtime.n(num); i = runtime.i(num); v = runtime.v(num);
      w = runtime.w(num); f = runtime.f(num); t = runtime.t(num); (((2..4).include?(n
      % 10) && !(12..14).include?(n % 100)) ? :few : (((n % 10 == 0 || (5..9).include?(n
      % 10)) || (11..14).include?(n % 100)) ? :many : ((n % 10 == 1 && n % 100 !=
      11) ? :one : :other))) }'
    :names:
    - :few
    - :many
    - :one
    - :other
  :ordinal:
    :rule: 'lambda { |num, runtime| n = runtime.n(num); i = runtime.i(num); v = runtime.v(num);
      w = runtime.w(num); f = runtime.f(num); t = runtime.t(num); ((((n % 10 == 2)
      || (n % 10 == 3)) && ((n % 100 != 12) && (n % 100 != 13))) ? :few : :other)
      }'
    :names:
    - :few
    - :other
