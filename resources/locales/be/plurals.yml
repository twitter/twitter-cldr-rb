---
:be:
  :cardinal:
    :rule: 'lambda { |num, runtime| n = runtime.n(num); i = runtime.i(num); v = runtime.v(num);
      w = runtime.w(num); f = runtime.f(num); t = runtime.t(num); (((n % 10 == 1)
      && (n % 100 != 11)) ? :one : ((((((n % 10).floor == (n % 10)) && ((n % 10) >=
      2) && ((n % 10) <= 4))) && (!(((n % 100).floor == (n % 100)) && ((n % 100) >=
      12) && ((n % 100) <= 14)))) ? :few : (((((n % 10 == 0) || ((((n % 10).floor
      == (n % 10)) && ((n % 10) >= 5) && ((n % 10) <= 9))))) || ((((n % 100).floor
      == (n % 100)) && ((n % 100) >= 11) && ((n % 100) <= 14)))) ? :many : :other)))
      }'
    :names:
    - :one
    - :few
    - :many
    - :other
  :ordinal:
    :rule: 'lambda { |num, runtime| n = runtime.n(num); i = runtime.i(num); v = runtime.v(num);
      w = runtime.w(num); f = runtime.f(num); t = runtime.t(num); (((((n % 10 == 2)
      || (n % 10 == 3))) && (((n % 100 != 12) && (n % 100 != 13)))) ? :few : :other)
      }'
    :names:
    - :few
    - :other
